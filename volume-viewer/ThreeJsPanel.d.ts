export class ThreeJsPanel {
    constructor(parentElement: any, useWebGL2: any);
    containerdiv: HTMLDivElement;
    canvas: HTMLCanvasElement;
    scene: any;
    zooming: boolean;
    animate_funcs: any[];
    onEnterVRCallback: any;
    onLeaveVRCallback: any;
    inRenderLoop: boolean;
    requestedRender: number;
    hasWebGL2: boolean;
    renderer: any;
    timer: Timing;
    orthoScale: number;
    fov: number;
    perspectiveCamera: any;
    perspectiveControls: TrackballControls;
    orthographicCameraX: any;
    orthoControlsX: TrackballControls;
    orthographicCameraY: any;
    orthoControlsY: TrackballControls;
    orthographicCameraZ: any;
    orthoControlsZ: TrackballControls;
    camera: any;
    controls: TrackballControls;
    resetPerspectiveCamera(): void;
    resetOrthographicCameraX(): void;
    resetOrthographicCameraY(): void;
    resetOrthographicCameraZ(): void;
    requestCapture(dataurlcallback: any): void;
    dataurlcallback: any;
    initVR(): void;
    xrButton: HTMLButtonElement;
    xrControls: vrObjectControls;
    isVR(): any;
    onEnterVR(): void;
    onLeaveVR(): void;
    resetToPerspectiveCamera(): void;
    resetCamera(): void;
    setupAxisHelper(): void;
    showAxis: boolean;
    axisScale: number;
    axisOffset: number[];
    axisHelperScene: any;
    axisHelperObject: any;
    axisCamera: any;
    setAutoRotate(rotate: any): void;
    getAutoRotate(): boolean;
    replaceCamera(newCam: any): void;
    replaceControls(newControls: any): void;
    switchViewMode(mode: any): void;
    getCanvas(): HTMLCanvasElement;
    resize(comp: any, w: any, h: any, ow: any, oh: any, eOpts: any): void;
    w: any;
    h: any;
    setClearColor(color: any, alpha: any): void;
    getWidth(): any;
    getHeight(): any;
    render(): void;
    redraw(): void;
    onAnimationLoop(): void;
    startRenderLoop(): void;
    stopRenderLoop(): void;
    removeControlHandlers(): void;
    setControlHandlers(onstart: any, onchange: any, onend: any): void;
    controlStartHandler: any;
    controlChangeHandler: any;
    controlEndHandler: any;
}
import Timing from "./Timing.js";
import TrackballControls from "./TrackballControls.js";
import vrObjectControls from "./vr/vrObjectControls.js";
